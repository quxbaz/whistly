* Todo
  - Built for mobile, but also available on desktop browser.
  - Similar to Trello, but better interface.
  - [TODO] Prototype as a webapp first!
  - Add option to default to adding/creating new item on app
    launch/focus for convenience.
** Focus
   - Stellar, excellent, top-notch, flawless, perfect design and typography.
   - Make undoing easy.
** Goals
   Be the BEST todolist app there is. But also be more than a todolist
   app, also be useful for notetaking, memorizing things, organizing
   information.
** Challenges
   --
** Features
   - Easy and powerful undo/redo.
   - Everything should be recoverable. More than undo/redo, undo trees
     similar to emacs? Allow recovering lists and items.
   - Nothing ever gets deleted unless the user explicitly deletes it,
     things are archived like in Trello.
   - Backup/restore lists from a plaintext file.
   - Create a list as a plaintext file and upload it.
   - [?] Import from google tasks
   - Emacs/vim bindings. We want the user to be able to edit as fast
     as he can. Also look for other popular bindings.
   - Plugin system for:
     + Keyboard config
     + Color themes
   - Sharing.
     + You can share everything or just individual lists or items.
   - Lock list option?
   - Shared lists.
   - Multi-user access?
   - GUI settings:
     + Show N lists.
   - When you click a GUI list, the plaintext window automatically
     jumps to the position of the selected list and its item and
     highlight it.
   - Email lists to people.
   - Searchable
   - Arrow keys to navigate lists in GUI (up/down/left/right)
     + Navigates between items AND lists.
   - Empty box with for adding new lists.
   - Customizeable list width.
   - Hotkeys for GUI editing.
     + Navigation
     + Marking done
     + Clearing done
     + Undo
     + Redo
     + Deleting
   - Mobile widget
   - Adjustable column numbers column-space width.
   - Sorting
   - Show items decaying by time
   - View note in large modal window.
** Guidelines
   - Writing both short and extended notes should feel comfortable.
** Potential names
   The name should have a degree of seriousness in it to reflect its application.
   - Whistly [working name]
   - Listmaster
   - Masterlist
   - Listlist
   - Doublelist
   - Whisk
   - Plainlist
   - Plain Old List
   - Lister
   - Todo
   - Text
   - Plain
** Ideas
   Look at Trello and Google Tasks.
   Look at other list apps (web and mobile).
   Look at as many list apps as you can.

* Later
  - [ ] Think of a project name.
  - [ ] Think about email clients and how they manage resources.
  - [ ] How to enable content encryption?

* Technical
  - [ ] Start writing unit tests.
  - [ ] Set up an automatic test runner.
  - [ ] Set up templating system.
  - [ ] Set up authentication on front and back-end.
  - [ ] Animate lists archiving.
  - [ ] Get basic atomic undo/redo system working. Make everything
        work off this. Use a global Action Store?

* Stuff you can do
  - [ ] Add drag and drop for everything (workspaces/lists/notes).
  - [ ] Add workspace organizations/groups.
  - [ ] Add cloning for everything.
  - [ ] Add Replace-List-With
  - [ ] Add creation dates on all items.
  - [ ] Support sorting on all items.
  - [ ] Support item editing.
  - [ ] Add navbar/controls bar that supports:
        - Navigating back to workspaces

* Now
  1. Get archiving working.
     - On the note and list level.
  2. Get directory template system working.
  3. Setup SSH key on bitbucket.
  4. Get account authentication working.
  5. Get database backend working.
  6. Get mocha unit testing working.
  7. Minimize document-level watchers. Relocate Note document watchers
     onto list/workspace/application.
  8. Archive cards that you cancel over a certain character length.
